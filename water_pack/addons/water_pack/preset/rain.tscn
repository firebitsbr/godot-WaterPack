[gd_scene load_steps=8 format=2]

[ext_resource path="res://addons/water_pack/script/rain.gd" type="Script" id=1]
[ext_resource path="res://addons/water_pack/texture/rain_particles.png" type="Texture" id=2]

[sub_resource type="Shader" id=7]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, diffuse_lambert;

uniform vec4 albedo : hint_color;
uniform float scale = 1.0;
uniform sampler2D rain_texture;

void vertex() {
	UV += INSTANCE_CUSTOM.xy;
	
	VERTEX *= scale;
	
	WORLD_MATRIX[2].xyz = normalize((WORLD_MATRIX[3] - CAMERA_MATRIX[3]).xyz) * vec3(1,0,1);
	WORLD_MATRIX[0].xyz = cross(WORLD_MATRIX[1].xyz, WORLD_MATRIX[2].xyz);
	
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * WORLD_MATRIX;
}


void fragment() {
	vec2 base_uv = UV;
	ALBEDO = albedo.rgb;
	ALPHA = texture(rain_texture, base_uv).a;
	TRANSMISSION = vec3(1.0);
}
"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/scale = 1.43
shader_param/rain_texture = ExtResource( 2 )

[sub_resource type="Shader" id=5]
code = "shader_type particles;

uniform vec4 spawn_range = vec4(-1.0, -1.0, 1.0, 1.0);
uniform float speed = 100.0;

float remap(float var, float in_min, float in_max, float out_min, float out_max) {
	float slope = (out_max - out_min) / (in_max - in_min);
	return out_min + slope * (var - in_min);
}

float rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float rand_from_seed_m1_p1(inout uint seed) {
	return rand_from_seed(seed) * 2.0 - 1.0;
}

uint hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

void vertex() {
	uint seed = hash(RANDOM_SEED + uint(INDEX));
	CUSTOM.x = rand_from_seed(seed);
	CUSTOM.y = rand_from_seed(seed);
	
	if(RESTART) {
		TRANSFORM[3].xyz = vec3(rand_from_seed(seed), -rand_from_seed(seed), rand_from_seed(seed));
		TRANSFORM[3].x = remap(TRANSFORM[3].x, 0, 1, spawn_range.x, spawn_range.z);
		TRANSFORM[3].z = remap(TRANSFORM[3].z, 0, 1, spawn_range.y, spawn_range.w);
	} else {
		VELOCITY = vec3(0, -speed * DELTA, 0);
		ACTIVE = TIME > LIFETIME;
	}
}

"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/spawn_range = Plane( -20, -20, 20, 20 )
shader_param/speed = 980.0

[sub_resource type="QuadMesh" id=4]
size = Vector2( 0.2, 0.8 )

[node name="rain" type="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.72433e-008, 19.1417, 4.50979e-009 )
script = ExtResource( 1 )

[node name="rain" type="Particles" parent="."]
material_override = SubResource( 8 )
cast_shadow = 0
amount = 50000
lifetime = 10.0
visibility_aabb = AABB( -20.8, -826.865, -20.8, 41.6, 827.64, 41.5994 )
process_material = SubResource( 6 )
draw_pass_1 = SubResource( 4 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.972029, 0.176072, 0.155431, -0.234862, 0.728713, 0.643287, -1.49012e-008, -0.661798, 0.749682, 0, 0, 0 )
editor_only = true
directional_shadow_mode = 0
